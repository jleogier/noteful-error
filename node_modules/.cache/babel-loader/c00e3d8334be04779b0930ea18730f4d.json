{"ast":null,"code":"import _classCallCheck from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/src/AddFolder/AddFolder.js\";\nimport React from \"react\";\nimport ValidationError from \"../ValidationError/ValidationError\";\nimport config from \"../config.js\";\nimport ApiContext from \"../ApiContext\";\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddFolder, _React$Component);\n\n  function AddFolder(props) {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFolder).call(this, props));\n    _this.state = {\n      folderName: \"\",\n      touched: false\n    };\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var folder = {\n        name: this.state.folderName\n      };\n      var url = \"\".concat(config.API_ENDPOINT, \"/folders\");\n      var options = {\n        method: \"POST\",\n        body: JSON.stringify(folder),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(url, options).then(function (res) {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        return res.json();\n      }).then(function (data) {\n        _this2.context.addFolder(data);\n\n        _this2.setState({\n          folderName: \"\",\n          touched: false\n        });\n\n        _this2.props.history.push(\"/\");\n      });\n    }\n  }, {\n    key: \"updateName\",\n    value: function updateName(name) {\n      this.setState({\n        folderName: name,\n        touched: true\n      });\n    }\n  }, {\n    key: \"validateName\",\n    value: function validateName() {\n      var folderName = this.state.folderName.trim();\n\n      if (folderName.length === 0) {\n        return \"Folder name cannot be empty\";\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Add Folder\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Folder name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name your folder\",\n        onChange: function onChange(e) {\n          return _this3.updateName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), this.state.touched && React.createElement(ValidationError, {\n        message: this.validateName(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: function onClick(e) {\n          return _this3.handleSubmit(e);\n        },\n        disabled: this.validateName(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return AddFolder;\n}(React.Component);\n\nAddFolder.contextType = ApiContext;\nexport { AddFolder as default };","map":{"version":3,"sources":["/Users/jeremyle-ogier/Desktop/Coding/noteful-error/src/AddFolder/AddFolder.js"],"names":["React","ValidationError","config","ApiContext","AddFolder","props","state","folderName","touched","event","preventDefault","folder","name","url","API_ENDPOINT","options","method","body","JSON","stringify","headers","fetch","then","res","ok","Error","json","data","context","addFolder","setState","history","push","trim","length","e","updateName","target","value","validateName","handleSubmit","Component","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ValidationError from \"../ValidationError/ValidationError\";\nimport config from \"../config.js\";\nimport ApiContext from \"../ApiContext\";\n\nexport default class AddFolder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      folderName: \"\",\n      touched: false\n    };\n  }\n\n  static contextType = ApiContext;\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const folder = { name: this.state.folderName };\n\n    const url = `${config.API_ENDPOINT}/folders`;\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(folder),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    fetch(url, options)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        return res.json();\n      })\n      .then(data => {\n        this.context.addFolder(data);\n        this.setState({ folderName: \"\", touched: false });\n        this.props.history.push(\"/\");\n      });\n  }\n\n  updateName(name) {\n    this.setState({ folderName: name, touched: true });\n  }\n\n  validateName() {\n    const folderName = this.state.folderName.trim();\n    if (folderName.length === 0) {\n      return \"Folder name cannot be empty\";\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    return (\n      <form>\n        <h2>Add Folder</h2>\n        <label>Folder name:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name your folder\"\n          onChange={e => this.updateName(e.target.value)}\n        />\n        {this.state.touched && (\n          <ValidationError message={this.validateName()} />\n        )}\n        <button type=\"reset\">Reset</button>\n        <button\n          type=\"submit\"\n          onClick={e => this.handleSubmit(e)}\n          disabled={this.validateName()}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}