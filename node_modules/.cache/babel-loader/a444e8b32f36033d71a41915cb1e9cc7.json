{"ast":null,"code":"import _classCallCheck from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeremyle-ogier/Desktop/Coding/noteful-error/src/AddNote/AddNote.js\";\nimport React from \"react\";\nimport ApiContext from \"../ApiContext\";\nimport config from \"../config\";\nimport ValidationError from \"../ValidationError/ValidationError\";\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n    _this.state = {\n      name: {\n        value: \"\",\n        touched: false\n      },\n      content: {\n        value: \"\",\n        touched: false\n      },\n      folder: {\n        value: \"\",\n        touched: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var date = new Date();\n      console.log(date);\n      this.setState({\n        modified: date\n      });\n      var note = {\n        name: this.state.name.value,\n        content: this.state.content.value,\n        folderId: this.state.folder.value\n      };\n      var url = \"\".concat(config.API_ENDPOINT, \"/notes\");\n      var options = {\n        method: \"POST\",\n        body: JSON.stringify(note),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(url, options).then(function (res) {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        return res.json();\n      }).then(function (data) {\n        _this2.context.addNote(data);\n\n        _this2.setState({\n          name: {\n            value: \"\",\n            touched: false\n          },\n          content: {\n            value: \"\",\n            touched: false\n          },\n          folder: {\n            value: \"\",\n            touched: false\n          }\n        });\n\n        _this2.props.history.push(\"/\");\n      });\n    }\n  }, {\n    key: \"updateName\",\n    value: function updateName(name) {\n      this.setState({\n        name: {\n          value: name,\n          touched: true\n        }\n      });\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent(content) {\n      this.setState({\n        content: {\n          value: content,\n          touched: true\n        }\n      });\n    }\n  }, {\n    key: \"updateFolder\",\n    value: function updateFolder(folder) {\n      this.setState({\n        folder: {\n          value: folder,\n          touched: true\n        }\n      });\n    }\n  }, {\n    key: \"validateName\",\n    value: function validateName() {\n      var name = this.state.name.value.trim();\n\n      if (name.length === 0) {\n        return \"Name is required\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var folders = this.context.folders;\n      var folderNames = folders.map(function (name) {\n        return React.createElement(\"option\", {\n          key: name.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, name.id);\n      });\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Add Note\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Note Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this3.updateName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), this.state.name.touched && React.createElement(ValidationError, {\n        message: this.validateName(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Content:\"), React.createElement(\"input\", {\n        type: \"textarea\",\n        onChange: function onChange(e) {\n          return _this3.updateContent(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Folder:\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this3.updateFolder(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Select a folder\"), folderNames), React.createElement(\"button\", {\n        type: \"reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: function onClick(e) {\n          return _this3.handleSubmit(e);\n        },\n        disabled: this.validateName(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.contextType = ApiContext;\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/jeremyle-ogier/Desktop/Coding/noteful-error/src/AddNote/AddNote.js"],"names":["React","ApiContext","config","ValidationError","AddNote","props","state","name","value","touched","content","folder","event","preventDefault","date","Date","console","log","setState","modified","note","folderId","url","API_ENDPOINT","options","method","body","JSON","stringify","headers","fetch","then","res","ok","Error","json","data","context","addNote","history","push","trim","length","folders","folderNames","map","id","e","updateName","target","validateName","updateContent","updateFolder","handleSubmit","Component","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ApiContext from \"../ApiContext\";\nimport config from \"../config\";\nimport ValidationError from \"../ValidationError/ValidationError\";\n\nexport default class AddNote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: { value: \"\", touched: false },\n      content: { value: \"\", touched: false },\n      folder: { value: \"\", touched: false }\n    };\n  }\n\n  static contextType = ApiContext;\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let date = new Date();\n    console.log(date);\n    this.setState({ modified: date });\n    const note = {\n      name: this.state.name.value,\n      content: this.state.content.value,\n      folderId: this.state.folder.value\n    };\n\n    const url = `${config.API_ENDPOINT}/notes`;\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(note),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    fetch(url, options)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        return res.json();\n      })\n      .then(data => {\n        this.context.addNote(data);\n        this.setState({\n          name: { value: \"\", touched: false },\n          content: { value: \"\", touched: false },\n          folder: { value: \"\", touched: false }\n        });\n        this.props.history.push(\"/\");\n      });\n  }\n\n  updateName(name) {\n    this.setState({ name: { value: name, touched: true } });\n  }\n\n  updateContent(content) {\n    this.setState({ content: { value: content, touched: true } });\n  }\n\n  updateFolder(folder) {\n    this.setState({ folder: { value: folder, touched: true } });\n  }\n\n  validateName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n      return \"Name is required\";\n    }\n  }\n\n  render() {\n    const { folders } = this.context;\n    const folderNames = folders.map(name => {\n      return <option key={name.id}>{name.id}</option>;\n    });\n    return (\n      <form>\n        <h2>Add Note</h2>\n        <label>Note Name:</label>\n        <input type=\"text\" onChange={e => this.updateName(e.target.value)} />\n        {this.state.name.touched && (\n          <ValidationError message={this.validateName()} />\n        )}\n        <label>Content:</label>\n        <input\n          type=\"textarea\"\n          onChange={e => this.updateContent(e.target.value)}\n        />\n        <label>Folder:</label>\n        <select onChange={e => this.updateFolder(e.target.value)}>\n          <option>Select a folder</option>\n          {folderNames}\n        </select>\n        <button type=\"reset\">Reset</button>\n        <button\n          type=\"submit\"\n          onClick={e => this.handleSubmit(e)}\n          disabled={this.validateName()}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}